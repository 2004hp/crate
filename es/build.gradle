apply from: "$rootDir/gradle/javaModule.gradle"


compileJava {
    // upstream code - not interested in any warnings
    options.warnings = false
    options.deprecation = false
    options.compilerArgs << '-XDignore.symbol.file'
    options.fork = true // probably not required when using java 1.8
    options.forkOptions.executable = 'javac'
}
compileTestJava.options.warnings = false

dependencies {
    // if you update the versions here
    // also update the dependencies in client/build.gradle

    // start ES compile dependencies
    // generated in upstream directory with:
    // mvn dependency:tree | grep -o ' .- .*:compile' | cut -d ' ' -f 3 | sort | sed "s/\(.*\):jar:\(.*\):compile/compile '\1:\2'/g"
    compile "com.carrotsearch:hppc:0.7.1"
    compile "com.fasterxml.jackson.core:jackson-core:${versions.jackson}"
    compile "com.fasterxml.jackson.dataformat:jackson-dataformat-cbor:${versions.jackson}"
    compile "com.fasterxml.jackson.dataformat:jackson-dataformat-smile:${versions.jackson}"
    compile "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:${versions.jackson}"
    compile "com.github.spullara.mustache.java:compiler:0.8.13"
    compile "com.google.guava:guava:${versions.guava}"
    compile "com.ning:compress-lzf:1.0.2"
    compile "com.spatial4j:spatial4j:${versions.spatial4j}"
    compile "com.tdunning:t-digest:3.0"
    compile "com.twitter:jsr166e:1.1.0"
    compile "com.vividsolutions:jts:${versions.jts}"
    compile "commons-cli:commons-cli:${versions.commonscli}"
    compile "io.netty:netty:${versions.netty}"
    compile "joda-time:joda-time:${versions.jodatime}"
    compile "log4j:apache-log4j-extras:${versions.log4j}"
    compile "log4j:log4j:${versions.log4j}"
    compile "net.java.dev.jna:jna:${versions.jna}"
    compile "org.apache.lucene:lucene-analyzers-common:${versions.lucene}"
    compile "org.apache.lucene:lucene-backward-codecs:${versions.lucene}"
    compile "org.apache.lucene:lucene-core:${versions.lucene}"
    compile "org.apache.lucene:lucene-grouping:${versions.lucene}"
    compile "org.apache.lucene:lucene-highlighter:${versions.lucene}"
    compile "org.apache.lucene:lucene-join:${versions.lucene}"
    compile "org.apache.lucene:lucene-memory:${versions.lucene}"
    compile "org.apache.lucene:lucene-misc:${versions.lucene}"
    compile "org.apache.lucene:lucene-queries:${versions.lucene}"
    compile "org.apache.lucene:lucene-queryparser:${versions.lucene}"
    compile "org.apache.lucene:lucene-sandbox:${versions.lucene}"
    compile "org.apache.lucene:lucene-spatial3d:${versions.lucene}"
    compile "org.apache.lucene:lucene-spatial:${versions.lucene}"
    compile "org.apache.lucene:lucene-suggest:${versions.lucene}"
    compile "org.elasticsearch:securesm:1.0"
    compile "org.hdrhistogram:HdrHistogram:2.1.6"
    compile "org.joda:joda-convert:1.2"
    compile "org.slf4j:slf4j-api:${versions.slf4j}"
    compile "org.slf4j:slf4j-log4j12:${versions.slf4j}"

    // snakeyaml is a duplicate dependency and left out by intent
    // compile "org.yaml:snakeyaml:1.15"
    // end ES compile dependencies

    compile "org.codehaus.groovy:groovy-all:2.4.4:indy"


    // mvn dependency:tree | grep -o ' .- .*:test' | cut -d ' ' -f 3 | sort | sed "s/\(.*\):jar:\(.*\):test/testCompile '\1:\2'/g"
    testCompile "com.carrotsearch.randomizedtesting:randomizedtesting-runner:${versions.randomizedrunner}"
    testCompile "com.google.jimfs:jimfs:1.0"
    testCompile "commons-codec:commons-codec:${versions.commonscodec}"
    testCompile "commons-logging:commons-logging:${versions.commonslogging}"
    testCompile "junit:junit:${versions.junit}"
    testCompile("org.apache.httpcomponents:httpclient:${versions.httpclient}") {
        exclude group: "commons-codec", module: "commons-codec"
    }
    testCompile "org.apache.httpcomponents:httpcore:${versions.httpcore}"
    testCompile "org.apache.lucene:lucene-codecs:${versions.lucene}"
    // If the version here is increased the `AssertingLeafReader` class needs to
    // be updated as it is a copy from lucene-test-framework
    testCompile "org.apache.lucene:lucene-test-framework:${versions.lucene}"
    testCompile "org.elasticsearch:securemock:${versions.securemock}"
    testCompile "org.hamcrest:hamcrest-all:${versions.hamcrest}"

    testCompile "com.google.code.findbugs:jsr305:${versions.jsr305}"
}


test {
    enabled = false
    jacoco {
        enabled = false
    }
}

sourceSets {
    main {
        java {
            srcDir 'upstream/core/src/main/java'
        }
        resources {
            srcDir 'upstream/core/src/main/resources'
            include '**/*.*'
        }
        resources {
            srcDir 'upstream/core/src/main/java'
            include '**/*.json'
            include '**/*.yml'
        }
    }
    test {
        java {
            srcDir 'upstream/core/src/test/java'
        }
        resources {
            srcDir 'upstream/core/src/test/resources'
            include '**/*.*'
        }
        resources {
            srcDir 'upstream/core/src/test/java'
            include '**/*.json'
            include '**/*.yml'
            include '**/*.txt'
        }
    }
}
