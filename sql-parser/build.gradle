apply plugin: 'java'
apply plugin: 'maven'

archivesBaseName = 'crate-sql-parser'
def parserFiles = files(
        'src/main/java/io/crate/sql/parser/StatementLexer.java',
        'src/main/java/io/crate/sql/parser/StatementParser.java'
)
import org.apache.tools.ant.taskdefs.condition.Os

repositories {
    mavenCentral()
}

configurations {
    antlr3
}

dependencies {
    compile 'com.google.code.findbugs:annotations:3.0.0'
    compile 'joda-time:joda-time:2.5'
    compile 'io.airlift:slice:0.7'
    compile 'com.google.guava:guava:18.0'
    compile 'org.antlr:antlr-runtime:3.5'

    antlr3 'org.antlr:antlr:3.4'

    testCompile ('org.testng:testng:6.8') {
        exclude group: 'junit', module: 'junit'
    }
    testCompile 'junit:junit:4.11'
}

task generateWithANTLR3(type:Exec) {
    String outputPath = '.';
    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
        outputPath = 'src/main/java/io/crate/sql/parser';
    }
    outputs.files(parserFiles)
    commandLine = ['java', '-cp',  configurations.antlr3.getAsPath(), 'org.antlr.Tool', '-o', outputPath, 'src/main/java/io/crate/sql/parser/Statement.g', 'src/main/java/io/crate/sql/parser/StatementBuilder.g']
}


tasks.withType(JavaCompile) {
    it.dependsOn generateWithANTLR3
}


test {
    // show standard out and standard error of the test JVM(s) on the console
    testLogging.showStandardStreams = true
    testLogging.exceptionFormat = 'full'

    useTestNG()

    jacoco {
        excludes = [
                "*Test*",
                "TreeAssertions*",
                "TreePrinter*"
                ]
    }
}

clean {
    doLast {
        parserFiles.each {
            it.delete()
        }
    }
}
