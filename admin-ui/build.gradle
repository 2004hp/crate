/*
 * Licensed to Crate.io Inc. (Crate) under one or more contributor license
 * agreements.  See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.  Crate licenses this file to
 * you under the Apache License, Version 2.0 (the "License");  you may not
 * use this file except in compliance with the License.  You may obtain a
 * copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
 * License for the specific language governing permissions and limitations
 * under the License.
 *
 * However, to use any modules in this file marked as "Enterprise Features",
 * Crate must have given you permission to enable and use such Enterprise
 * Features and you must have a valid Enterprise or Subscription Agreement
 * with Crate.  If you enable or use the Enterprise Features, you represent
 * and warrant that you have a valid Enterprise or Subscription Agreement
 * with Crate.  Your use of the Enterprise Features if governed by the terms
 * and conditions of your Enterprise or Subscription Agreement with Crate.
 */

apply from: "$rootDir/gradle/javaModule.gradle"

archivesBaseName = 'crate-admin-ui'

dependencies {
    compile project(':core')
    testCompile project(':integration-testing')
}

ext {
    plugin_crateadmin_version = '1.1.1'
    downloadDir = new File(buildDir, 'downloads')
}

def extractTopfolder(File src, String trg) {
    copy {
        includeEmptyDirs = false
        FileTree ft
        if (src.name.endsWith('.tar.gz')) {
            ft = tarTree(src)
        }
        from(ft) {
            eachFile {
                details -> details.path = details.path.substring(details.relativePath.segments[0].length())
            }
        }
        into trg
    }
}

task writePropertiesFile {
    doLast {
        def file = new File("${buildDir}/crate-admin/plugin-descriptor.properties")
        if (!file.isFile()) {
            def parentDir = new File(file.parent)
            if (!parentDir.isDirectory()) {
                parentDir.mkdirs()
            }
            file.createNewFile()
        }
        ant.propertyfile(file: file.path, comment: 'Plugin Descriptor') {
            ant.entry(key: 'name', value: project.archivesBaseName)
            ant.entry(key: 'description', value: project.description)
            ant.entry(key: 'version', value: plugin_crateadmin_version)
            ant.entry(key: 'site', value: true)
        }
    }
}


task downloadPlugin(dependsOn: [writePropertiesFile]) {
    doLast {
        def dest = download(
                downloadDir,
                "https://cdn.crate.io/downloads/releases/crate-admin-${plugin_crateadmin_version}.tar.gz",
                "crate-admin-${plugin_crateadmin_version}.tar.gz"
        )
        extractTopfolder(dest, "${buildDir}/crate-admin/_site")
    }
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
    }

    test {
        java {
            srcDir 'src/test/java'
        }
    }
}

sourceSets.main.output.resourcesDir = null
sourceSets.test.output.resourcesDir = null
